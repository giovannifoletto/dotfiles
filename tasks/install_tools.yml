- name: Add the flathub flatpak repository remote to the user installation
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: Install Ghidra
  community.general.flatpak:
    name: org.ghidra_sre.Ghidra
    method: user
    state: present

- name: Virtualbox installation
  tags: todo
  block:
    - name: Install Prerequisite
      ansible.builtin.dnf:
        name: 
          - '@development-tools'
          - kernel-headers
          - kernel-devel
          - dkms
      become: true
      become_method: sudo

    - name: Install new repo
      ansible.builtin.template:
        src: templates/virtualbox.j2
        dest: /etc/yum.repos.d/virtualbox.repo
        mode: '0644'
      become: true
      become_method: sudo

    - name: Update repositories
      ansible.builtin.dnf:
        name: '*'
        state: latest
      become: true
      become_method: sudo

    - name: Install virtualbox
      ansible.builtin.dnf:
        name: VirtualBox-7.1
        state: present
      become: true
      become_method: sudo

    - name: Get virtualbox version
      ansible.builtin.command: vboxmanage -v | cut -dr -f1
      register: vbox_version

    - name: Download extension pack
      ansible.builtin.get_url:
        url: https://download.virtualbox.org/virtualbox/{{ vbox_version | json_query('.content') | b64decode }}/Oracle_VirtualBox_Extension_Pack-7.1.0.vbox-extpack
        dest: /tmp/Oracle_VirtualBox_Extension_Pack-7.1.0.vbox-extpack
    
    - name: Update extensionbox
      ansible.builtin.command: yes | vboxmanage extpack install /tmp/Oracle_VirtualBox_Extension_Pack-7.1.0.vbox-extpack
      become: true
      become_method: sudo
  
    - name: Add user to vboxuser
      ansible.builtin.user:
        name: '{{ username }}'
        group: vboxuser
        append: yes
      become: true
      become_method: sudo

- name: ZED installation
  block:
    - name: Download script
      ansible.builtin.get_url:
        url: https://zed.dev/install.sh
        dest: /tmp/install-zed.sh
        mode: '0755'

    # - name: Get zed version
    #   ansible.builtin.shell:
    #     cmd: zed --version
    #   args:
    #     executable: /bin/zsh
    #   register: zed_version

    # - debug:
    #     vars: zed_version

    - name: Execute zed instation script
      ansible.builtin.shell: bash -c /tmp/install-zed.sh
      when: zed_version | json_query('.content') | b64decode is None
      tags: zed_already_installed
       

- name: Update, install and configure packages
  ansible.builtin.dnf:
    name: 
      - ansible
      - tmux
      - perl
      - exiftool
      # - remmmina
      - yara
      # - sonic-visualizer
      - python3
      - python3-pip
      - curl
      - wget
      - perl
      - python3-yara
      - yara-doc
      - wireshark
      - zeek-core
      - zeek-zkg
      - john
      - conda
      - jq
      - binwalk
      - hashcat
      - java-21-openjdk
      - yq
      - gem
    state: latest
  become: true
  become_method: sudo
  
- name: Install optional packages
  ansible.builtin.dnf:
    name:
      - valgrind
    state: latest
  become: true
  become_method: sudo
  tags: optional

- name: Install gdb and gef plugin
  block:
    - name: Install OS packages
      ansible.builtin.dnf:
        name:
          - gdb
          - file
          - readelf
          - nm
          - ps
        state: latest
      become: true
      become_method: sudo

    - name: Check for python version inside gdb
      ansible.builtin.command: gdb -nx -ex 'pi print(sys.version)' -ex quit
      register: gdb_python_version 

    - name: Debug python version inside gdb
      ansible.builtin.debug:
        var: gdb_python_version 

    - name: Get installation file
      ansible.builtin.get_url: 
        url: https://gef.blah.cat/sh
        dest: /tmp/gef-install.sh
        mode: '0755'

    - name: Install gef
      ansible.builtin.shell: zsh -c /tmp/gef-install.sh

- name: Initialize conda
  ansible.builtin.command: conda init
  register: this
  failed_when: this.rc != 0
  tags: not_working

# Langage specif Tools

- name: Install python3 tools
  ansible.builtin.pip:
    name: 
      - pwntools
      - requests
      - beautifulsoup4
      - argparse
      - numpy
      # - struct # at the time of running this cannot compile, is not available from python3.13
      - pycryptodome
      - keystone-engine
      - capstone
      - filebytes
      - ropper

- name: Install optional python packages
  tags: optional
  ansible.builtin.pip:
    name:
      - webgrep-tool

- name: Go tools
  ansible.builtin.command: go install {{ go_package }}
  register: this
  failed_when: this.rc != 0
  changed_when: this.rc == 0 and this.stdout is not None
  loop:
    - github.com/ffuf/ffuf/v2@latest
    - github.com/tomnomnom/gron@latest
    - github.com/zyedidia/eget@latest
  loop_control:
    loop_var: go_package
    label: Installing {{ go_package }} via golang package manager
  tags: go_tools_to_install

- name: Installing Perl tools
  ansible.builtin.command: gem install {{ gem_package }}
  register: this
  failed_when: this.rc != 0
  loop:
    - zsteg
    - one_gadget
  loop_control:
    loop_var: gem_package
    label: Installing {{ gem_package }} via gem package manager

- name: Install ngrok
  tags: not_working
  block:
  - name: Get tar file
    ansible.builtin.get_url:
      url: https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
      dest: /tmp/ngrok-v3-stable-linux-amd64.tar.gz
      mode: '0777'
  
  - name: Unzip tar file
    ansible.builtin.unarchive:
      src: /tmp/ngrok-v3-stable-linux-amd64.tar.gz
      dest: /usr/local/bin/ngrok
    become: true
    become_method: sudo

- name: Install volatility
  block:
    - name: Prerequisite
      ansible.builtin.pip:
        name:
          # - dstorm3
          - pillow
          - openpyxl
          - ujson
           
    # - name: Git clone repository
    #   ansible.builtin.git:
    #     repo: https://github.com/volatilityfoundation/volatility.git
    #     dest: /opt/volatility
    #     depth: 1
    #   become: true
    #   become_method: sudo
    
    - name: Create static link to volatility in /local/bin
      ansible.builtin.file:
        src: /opt/volatility/vol.py
        dest: /usr/local/bin/vol
        state: link
        mode: '0777'
      become: true
      become_method: sudo

- name: Install snyk
  ansible.builtin.get_url:
    url: https://downloads.snyk.io/cli/stable/snyk-linux
    dest: /usr/local/bin/snyk
    mode: '0766'
  become: true
  become_method: sudo

- name: Install powershell
  block:
    - name: Add microsoft repo
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/fedora/{{ ansible_distribution_major_version }}/prod/config.repo
        dest: /etc/yum.repos.d/microsoft.repo
        mode: '0644'
      become: true
      become_method: sudo
    
    - name: DNF update
      ansible.builtin.command: dnf update -y
      register: this
      failed_when: this.rc != 0
      become: true
      become_method: sudo
    
    # - name: Install powershell
    #   ansible.builtin.dnf:
    #     name: powershell
    #     state: present
    #   become: true
    #   become_method: sudo

- name: Clone SecLists repo
  ansible.builtin.git:
    repo: https://github.com/danielmiessler/SecLists.git
    depth: 1
    dest: /opt/SecLists
  become: true
  become_method: sudo

- name: Clone sqlmap repo
  ansible.builtin.git:
    repo: https://github.com/sqlmapproject/sqlmap.git
    depth: 1
    dest: /opt/sqlmap-dev
  become: true
  become_method: sudo

- name: Install Stegsolve.jar
  tags: not_working
  block:
    - name: Download Stegsolve.jar
      ansible.builtin.get_url:
        url: https://www.caesum.com/handbook/Stegsolve.jar
        dest: /opt/Stegsolve.jar
        mode: '0755'
      become: true
      become_method: sudo
    
    - name: Create link to it from /usr/local/bin
      ansible.builtin.file:
        src: /opt/Stegsolve.jar
        dest: /usr/local/bin/stegsolve
        owner: '{{ username }}'
        state: link
      become: true
      become_method: sudo

# this is probably nonsense and will probably fail
# Limit the action to the two env to create, and then leave the installation of the packages
# to manual actiions
# To make these envs functional, follow the README.md
- name: Create Angr and z3 conda env
  tags: not_working
  block:
    - name: Conda initialization and env creation
      ansible.builtin.command: '{{ command }}'
      register: this
      failed_when: this.rc != 0
      loop:
        - conda init
        - conda create -n angr python=3.10 -y
        - conda create -n z3 -y
      loop_control:
        label: Running {{ command }}.
        loop_var: command

- name: Install apktools
  block:
    - name: Download apktools commodity script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool
        dest: /usr/local/bin/apktool
        mode: '0755'
      become: true
      become_method: sudo
    
    - name: Download apktools jar file
      ansible.builtin.get_url:
        url: https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_{{ apktool_version }}.jar
        dest: /usr/local/bin/apktools_{{ apktool_version }}.jar
        mode: '0755'
      become: true
      become_method: sudo

- name: Install BurpSuite
  block:
    - name: Get commodity installation script
      ansible.builtin.get_url:
        url: https://portswigger-cdn.net/burp/releases/download?product=community&version={{ burp_version }}&type=Linux
        dest: /tmp/install-burp.sh
        mode: '0755'
    # cannot do that, is a interactive installation this
    # - name: Execute script
    #   ansible.builtin.command: bash -c /tmp/install-burp.sh
    #   register: this
    #   failed_when: this.rc != 0
    
- name: Install commix
  tags: optional
  block:
    - name: Clone Github repo
      ansible.builtin.git:
        repo: https://github.com/commixproject/commix.git
        dest: /opt/commix
        depth: 1
    
    - name: Make symlink
      ansible.builtin.file:
        src: /opt/commix/commix.py
        dest: /usr/local/bin/commix.py
        state: link

- name: Install featherduster
  tags: optional
  block:
    - name: Clone Github repo
      ansible.builtin.git:
        repo: https://github.com/nccgroup/featherduster
        dest: /opt/featherduster
        depth: 1
    
    - name: Create wrapper file
      ansible.builtin.file:
        path: /usr/local/bin/featherduster
        state: touch
    
    - name: Write wrapper around it
      ansible.builtin.lineinfile:
        path: /usr/local/bin/featherduster
        line: >-
          #!/bin/sh
          exec python $(realpath ../featherduster/featherduster.py) "\$@"
        state: present

- name: JDGui - Java Decompiler
  tags: optional
  block:
    - name: Download JDGui
      ansible.builtin.get_url:
        url: https://github.com/java-decompiler/jd-gui/releases/download/v1.4.0/jd-gui-{{ jd_gui_version }}.jar
        dest: /opt/jd-gui-1.4.0.jar
        mode: '0755'
    
    - name: Add wrapper
      ansible.builtin.file:
        dest: /usr/local/bin/jd-gui
        mode: touch
    
    - name: Insert content of the wrapper in the script
      ansible.builtin.lineinfile:
        line: >-
          #/bin/bash -e
          java -jar /opt/jd-gui-{{ jd_gui_version }}.jar "\$@"
